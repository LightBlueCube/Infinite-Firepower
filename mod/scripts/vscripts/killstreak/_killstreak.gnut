untyped
global function KillStreak_Init
global function GetKillStreakData
global function SetKillStreakData
global function SetRandomKillStreakFunction
global function KillStreakEnable
global function SetKillStreakEnable
global function GiveRandomKillStreakInNextMatch

table<int> file = {
	nukeTitan = 5
	cruiseMissile = 12
	vtol = 12
	orbitalStrike = 4
	scp018 = 6
	nuclearBomb = 20
}

bool KILL_STREAK_ENABLE = true

array<string> RandomKillStreakPlayers = []

void functionref( entity ) randomKillStreakFunc

table<string, table<string, var> > savedPlayerKillStreak

void function KillStreak_Init()
{
	KsGUI_Init()

	RandomKillStreakPlayers = GetStringArrayFromConVar( "random_killstreak_players" )
	SetRandomKillStreakFunction( RandomKillStreak )
	AddCallback_OnClientConnected( OnClientConnected )
	AddCallback_OnClientDisconnected( OnClientDisconnected )
	AddCallback_OnPlayerRespawned( RestoreKillStreak )
	AddCallback_OnPlayerKilled( OnPlayerKilled )
	AddCallback_OnNPCKilled( OnPlayerKilled )
	AddCallback_GameStateEnter( eGameState.WinnerDetermined, OnWinnerDetermined )
	AddCallback_GameStateEnter( eGameState.Postmatch, GameStateEnter_Postmatch )
}

table<int> function GetKillStreakData()
{
	return file
}

void function SetRandomKillStreakFunction( void functionref( entity ) func )
{
	randomKillStreakFunc = func
}

void function RandomKillStreak( entity player )
{
	player.s.SCP018 += RandomInt( 2 )
	player.s.CruiseMissile += RandomInt( 2 )
	player.s.OrbitalStrike += RandomInt( 2 )
	player.s.NukeTitan += 4 - player.s.SCP018 - player.s.CruiseMissile - player.s.OrbitalStrike
}

void function SetKillStreakData( table<int> input )
{
	file = input
}

bool function KillStreakEnable()
{
	return KILL_STREAK_ENABLE
}

void function SetKillStreakEnable( bool state )
{
	KILL_STREAK_ENABLE = state
}

void function OnWinnerDetermined()
{
	SetNuclearBombDisable()
	if( KillStreakEnable() )
		RandomKillStreakPlayers = []
}

void function OnClientConnected( entity player )
{
	player.s.KillStreak <- 0
	player.s.TotalKills <- 0
	player.s.KillStreakNoNPC <- 0

	player.s.HaveNuclearBomb <- false
	player.s.HaveVTOL <- false
	player.s.OrbitalStrike <- 0
	player.s.SCP018 <- 0
	player.s.NukeTitan <- 0
	player.s.CruiseMissile <- 0

	if( RandomKillStreakPlayers.contains( player.GetUID() ) )
		player.s.GiveRandomKillStreak <- true

	string uid = player.GetUID()
	if( !( uid in savedPlayerKillStreak ) )
		return

	foreach( k, v in savedPlayerKillStreak[uid] )
		player.s[k] <- v
	player.s.DontRestore <- true
	delete savedPlayerKillStreak[uid]
}

void function OnClientDisconnected( entity player )
{
	if( !IsValid( player ) )
		return

	array<string> validKeys = [ "KillStreak", "TotalKills", "KillStreakNoNPC", "HaveNuclearBomb", "HaveVTOL", "OrbitalStrike", "SCP018", "NukeTitan", "CruiseMissile" ]
	string uid = player.GetUID()
	savedPlayerKillStreak[uid] <- {}
	foreach( key in validKeys )
	{
		if( !( key in player.s ) )
			continue

		savedPlayerKillStreak[uid][key] <- player.s[key]
	}
}

void function RestoreKillStreak( entity player )
{
	if( !KillStreakEnable() )
		return

	if( "dontShowTips" in player.s )
		if( player.s.dontShowTips )
			return

	if( player.s.HaveNuclearBomb )
		thread DelayAnnouncement( player, 1 )
	else if( player.s.NukeTitan != 0 || player.s.CruiseMissile != 0 || player.s.HaveVTOL || player.s.OrbitalStrike != 0 )
		thread DelayAnnouncement( player, 0 )

	if( "DontRestore" in player.s )
	{
		if( player.s.DontRestore )
		{
			player.s.DontRestore <- false
			return
		}
	}
	if( "GiveRandomKillStreak" in player.s )
	{
		if( player.s.GiveRandomKillStreak )
		{
			thread RandomKillStreak_MsgShared( player )
			randomKillStreakFunc( player )

			player.s.GiveRandomKillStreak <- false
			RandomKillStreakPlayers.removebyvalue( player.GetUID() )
		}
	}

	player.s.KillStreak <- 0	//重置玩家的一命击杀数
	player.s.KillStreakNoNPC <- 0
}

void function DelayAnnouncement( entity player, int style )
{
	player.EndSignal( "OnDestroy" )
	player.EndSignal( "OnDeath" )

	wait 0.5
	if( style == 0 )
		NSSendAnnouncementMessageToPlayer( player, "有連殺獎勵未使用！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 50, 50, 225 >, 255, 5 )
	if( style == 1 )
		NSSendAnnouncementMessageToPlayer( player, "折疊時空武器已就緒", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 225, 50, 60 >, 255, 6 )
}

void function RandomKillStreak_MsgShared( entity player )
{
	player.EndSignal( "OnDestroy" )
	player.EndSignal( "OnDeath" )
	WaitFrame()
	while( player.GetParent() )
		WaitFrame()
	NSSendAnnouncementMessageToPlayer( player, "在上一對局成功撤離，給予隨機連殺獎勵！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 50, 50, 225 >, 255, 5 )
}

void function OnPlayerKilled( entity victim, entity attacker, var damageInfo )
{
	if( !KillStreakEnable() )
		return

	if( !IsValid( attacker ) )
		return

	if( attacker.IsNPC() && attacker.IsTitan() )
	{
		attacker = attacker.GetBossPlayer()
		if( !IsValid( attacker ) )
			return
	}
	if( !attacker.IsPlayer() )
		return
	if( attacker == victim || attacker.GetTeam() == victim.GetTeam() )
		return
	if( victim.IsNPC() && !victim.IsTitan() )
		return

	attacker.s.KillStreak += 1
	attacker.s.TotalKills += 1
	if( victim.IsPlayer() )
		attacker.s.KillStreakNoNPC += 1

	if( attacker.s.TotalKills % file.nukeTitan == 0 )
	{
		attacker.s.NukeTitan += 1
		NSSendAnnouncementMessageToPlayer( attacker, "獲得核武泰坦！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 255, 0, 0 >, 255, 5 )
	}
	if( attacker.s.TotalKills % file.cruiseMissile == 0 )
	{
		attacker.s.CruiseMissile += 1
		NSSendAnnouncementMessageToPlayer( attacker, "獲得巡飛彈！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 255, 0, 0 >, 255, 5 )
	}
	if( attacker.s.KillStreak == file.scp018 )	// player only can get one time SCP-018 in once respawn
	{
		attacker.s.SCP018 += 1
		NSSendAnnouncementMessageToPlayer( attacker, "獲得彈力球！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 255, 0, 0 >, 255, 5 )
	}
	if( attacker.s.KillStreak == file.orbitalStrike )	// player only can get one time OrbitalStrike in once respawn
	{
		attacker.s.OrbitalStrike += 1
		NSSendAnnouncementMessageToPlayer( attacker, "獲得軌道打擊！", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 255, 0, 0 >, 255, 5 )
	}
	if( attacker.s.KillStreak == file.vtol )
	{
		//vtol features
	}
	if( attacker.s.KillStreakNoNPC == file.nuclearBomb )
	{
		attacker.s.HaveNuclearBomb <- true
		NSSendAnnouncementMessageToPlayer( attacker, "折疊時空武器已就緒", "鐵馭狀態下按 泰坦輔助技能鍵（默認為G） 打開菜單！", < 255, 0, 0 >, 255, 6 )
	}
}

void function GameStateEnter_Postmatch()
{
	StoreStringArrayIntoConVar( RandomKillStreakPlayers, "random_killstreak_players" )
}

void function GiveRandomKillStreakInNextMatch( entity player )
{
	RandomKillStreakPlayers.append( player.GetUID() )
	NSSendAnnouncementMessageToPlayer( player, "成功撤離！將在下一對局給予隨機連殺獎勵", "", < 50, 50, 225 >, 255, 5 )
}
