untyped
global function ApplyDropBattery
global function DropBattery
global function ApplyNukeTitan
global function ApplyCruiseMissile
global function ApplyVTOL
global function ApplyNuclearBomb


void function ApplyDropBattery( entity player )
{
    if( !player.IsHuman() )
    {
        SendHudMessage( player, "\n你需要处于铁驭状态才能扔出电池", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !IsAlive( player ) )
    {
        SendHudMessage( player, "\n死亡时不可丢出电池", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !PlayerHasMaxBatteryCount( player ) )
    {
        SendHudMessage( player, "\n你没有电池", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }

    DropBattery( player )
}

void function DropBattery( entity player )
{
    if( !player.IsHuman() || !IsAlive( player ) || !PlayerHasMaxBatteryCount( player ) )
        return

    entity battery = Rodeo_TakeBatteryAwayFromPilot( player )
    vector viewVector = player.GetViewVector()
    vector playerVel = player.GetVelocity()
    vector batteryVel = playerVel + viewVector * 200 + < 0, 0, 100 >
    battery.SetVelocity( batteryVel )
    battery.s.touchEnabledTime <- Time() + 1

    if( battery.GetSkin() == 0 )
        SendHudMessage( player, "\n已丢出电池!", -1, 0.3, 100, 255, 100, 255, 0, 2, 1 )
    if( battery.GetSkin() == 1 )
        SendHudMessage( player, "\n已丢出电池!", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
    if( battery.GetSkin() == 2 )
        SendHudMessage( player, "\n已丢出电池!", -1, 0.3, 255, 255, 100, 255, 0, 2, 1 )
    EmitSoundOnEntityOnlyToPlayer( player, player, "UI_Menu_Store_Purchase_Success" )
}

void function ApplyNukeTitan( entity player, bool applyAll = false )
{
    if( player.s.NukeTitan <= 0 )
    {
        SendHudMessage( player, "\n你没有核武泰坦!", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !player.IsHuman() )
    {
        SendHudMessage( player, "\n你需要处于铁驭状态才能交付核武泰坦", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( applyAll )
    {
        SendHudMessage( player, "\n成功交付了 "+ player.s.NukeTitan +" 个核武泰坦", -1, 0.3, 100, 255, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "UI_InGame_FD_ArmoryPurchase" )
        for( var i = player.s.NukeTitan; i > 0; i -= 1)
        {
            PlayerInventory_GiveNukeTitan( player )
        }
        player.s.NukeTitan = 0
    }
    else
    {
        player.s.NukeTitan -= 1
        SendHudMessage( player, "\n成功交付了 1 个核武泰坦\n剩余 "+ player.s.NukeTitan +" 个核武泰坦未交付", -1, 0.3, 100, 255, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "UI_InGame_FD_ArmoryPurchase" )
        PlayerInventory_GiveNukeTitan( player )
    }
}

void function ApplyCruiseMissile( entity player )
{
    if( player.s.CruiseMissile <= 0 )
    {
        SendHudMessage( player, "\n无巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !IsAlive( player ) )
    {
        SendHudMessage( player, "\n死亡时不可使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( IsValid( player.GetTitanSoulBeingRodeoed() ) )
    {
        SendHudMessage( player, "\n训牛时不可使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( player.GetParent() )
    {
        SendHudMessage( player, "\n在有绑定的父级实体时不可使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !player.IsHuman() )
    {
        SendHudMessage( player, "\n你需要处于铁驭状态才能使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( player.IsPhaseShifted() )
    {
        SendHudMessage( player, "\n你需要离开相位才能使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }
    if( !player.IsOnGround() )
    {
        SendHudMessage( player, "\n你需要站在地上才能使用巡弋飞弹", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }

    thread CruiseMissileAnim_ThinkBefore( player )
    SendHudMessage( player, " ", -1, 0.3, 100, 255, 100, 255, 0, 2, 1 )
    EmitSoundOnEntityOnlyToPlayer( player, player, "UI_InGame_FD_ArmoryPurchase" )
    player.s.CruiseMissile -= 1
}

void function ApplyVTOL( entity player )
{
    //feature  ¯\_( ͡° ͜ʖ ͡°)_/¯
}

void function ApplyNuclearBomb( entity player )
{
    if( !player.s.HaveNuclearBomb )
    {
        SendHudMessage( player, "\n折叠时空武器离线", -1, 0.3, 255, 100, 100, 255, 0, 2, 1 )
        EmitSoundOnEntityOnlyToPlayer( player, player, "menu_deny" )
        return
    }

    thread NuclearBombAnimThink( player )
    EmitSoundOnEntityOnlyToPlayer( player, player, "UI_InGame_FD_ArmoryPurchase" )
}